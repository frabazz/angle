{"version":3,"sources":["utilities/Layer.js","utilities/Drawer.js","Components/Canvas.js","Components/Fraction.js","utilities/Expressions.js","utilities/Fractions.js","Components/ExpressionBox.js","Components/LeftContainer.js","Components/RightContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Layer","pi","Math","PI","this","Angles","StringAngles","StringDict","i","length","AnglesDict","string","angle","newDict","a","b","includes","console","log","indexOf","Layers","resultDict","LayersDict","getList","Array","j","actAngle","sign","getDict","push","signList","result","resultLayer","setDict","layer","angleList","angleDict","startTerm","getLatexAngle","endTerm","Drawer","x","y","text","canvas","document","getElementById","Xoffset","Yoffset","cos","sin","ctx","getContext","font","fillText","replace","r","startAngle","endAngle","context","beginPath","arc","stroke","color","lineWidth","strokeStyle","l","list","dict","drawColoredArc","importantAngles","drawLayer","getAngleFromString","drawText","Canvas","props","percentage","percent","state","width","window","innerWidth","height","innerHeight","id","getLatex","Component","Fraction","isFraction","className","top","bottom","noF","Expression","exp","isFirstType","isSecondType","isSystemIndex","count","getLeft","getRight","getType","replaceAll","substr","setTrueFor","logTest","setTrueForExtern","isSystem","Fractions","fraction","end","substring","start","ExpressionBox","require","leftTop","leftBottom","rightTop","rightBottom","active","type","handlePress","bind","noLayer","l1","getLayer","left","right","expClass","getClassforComp","postExp","preExp","exps","layers","mergeLayers","range","updateHandler","e","key","expText","value","submitExp","setState","noFright","noFleft","isFractionLeft","isFractionRight","getTop","getBottom","classId","onKeyDown","LeftContainer","children","RightContainer","componentList","clazzId","onClick","multiplyLayers","location","reload","d","toDataURL","open","write","App","components","writeResult","F1","F2","title","resultHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aaff7d80.chunk.js","sourcesContent":["class Layer{\r\n    constructor(){\r\n        var pi = Math.PI;\r\n        this.Angles = [\r\n            0,\r\n            pi/12, \r\n            pi/10,\r\n            pi/8, \r\n            pi/6,\r\n            pi/5,\r\n            pi/4,\r\n            (3/10)*pi, \r\n            pi/3,\r\n            (3/8)*pi,\r\n            (2/5)*pi,\r\n            (5/12)*pi,\r\n            pi/2,\r\n            (7/12)*pi,\r\n            (3/5)*pi,\r\n            (5/8)*pi,\r\n            (2/3)*pi,\r\n            (7/10)*pi,\r\n            (3/4)*pi,\r\n            (4/5)*pi,\r\n            (5/6)*pi,\r\n            (7/8)*pi,\r\n            (9/10)*pi,\r\n            (11/12)*pi,\r\n            pi,\r\n            (13/12)*pi,\r\n            (11/10)*pi,\r\n            (9/8)*pi,\r\n            (7/6)*pi,\r\n            (6/5)*pi,\r\n            (5/4)*pi,\r\n            (13/10)*pi,\r\n            (4/3)*pi,\r\n            (11/8)*pi,\r\n            (7/5)*pi,\r\n            (17/12)*pi,\r\n            (3/2)*pi,\r\n            (19/12)*pi,\r\n            (8/5)*pi,\r\n            (13/8)*pi,\r\n            (5/3)*pi,\r\n            (17/10)*pi,\r\n            (7/4)*pi,\r\n            (9/5)*pi,\r\n            (11/6)*pi,\r\n            (15/8)*pi,\r\n            (19/10)*pi,\r\n            (23/12)*pi,\r\n            2*pi,\r\n        ];\r\n        this.StringAngles = [\r\n            \"0\",\r\n            \"pi/12\", \r\n            \"pi/10\",\r\n            \"pi/8\", \r\n            \"pi/6\",\r\n            \"pi/5\",\r\n            \"pi/4\",\r\n            \"3pi/10\", \r\n            \"pi/3\",\r\n            \"3pi/8\",\r\n            \"2pi/5\",\r\n            \"5pi/12\",\r\n            \"pi/2\",\r\n            \"7pi/12\",\r\n            \"3pi/5\",\r\n            \"5pi/8\",\r\n            \"2pi/3\",\r\n            \"7pi/10\",\r\n            \"3pi/4\",\r\n            \"4pi/5\",\r\n            \"5pi/6\",\r\n            \"7pi/8\",\r\n            \"9pi/10\",\r\n            \"11pi/12\",\r\n            \"pi\",\r\n            \"13pi/12\",\r\n            \"11pi/10\",\r\n            \"9pi/8\",\r\n            \"7pi/6\",\r\n            \"6pi/5\",\r\n            \"5pi/4\",\r\n            \"13pi/10\",\r\n            \"4pi/3\",\r\n            \"11pi/8\",\r\n            \"7pi/5\",\r\n            \"17/12\",\r\n            \"3pi/2\",\r\n            \"19pi/12\",\r\n            \"8pi/5\",\r\n            \"13pi/8\",\r\n            \"5pi/3\",\r\n            \"17pi/10\",\r\n            \"7pi/4\",\r\n            \"9pi/5\",\r\n            \"11pi/6\",\r\n            \"15pi/8\",\r\n            \"19pi/10\",\r\n            \"23pi/12\",\r\n            \"2pi\",\r\n        ];\r\n        this.StringDict = {};\r\n        for(var i = 0;i < this.StringAngles.length;i++){\r\n            this.StringDict[this.StringAngles[i]] = this.Angles[i]; \r\n        }\r\n        this.AnglesDict = {};\r\n        for(var i = 0;i < this.Angles.length;i++){\r\n            this.AnglesDict[this.Angles[i]] = false;\r\n        }\r\n        \r\n    }\r\n    static multiplyLayers(Layers){\r\n        var resultDict = {};\r\n        var LayersDict = {};\r\n        for(var i = 0;i < Layers[0].getList().length;i++){\r\n            LayersDict[Layers[0].getList()[i]] = new Array();\r\n        }\r\n        for(var i = 0;i < Layers.length;i++){\r\n            for(var j = 0;j < Layers[i].getList().length;j++){\r\n                var actAngle = Layers[i].getList()[j];\r\n                var sign = Layers[i].getDict()[actAngle];\r\n                if(sign)sign = 1;\r\n                else sign = -1; \r\n                LayersDict[actAngle].push(sign);\r\n            }\r\n        }\r\n        for(var i = 0;i < Layers[0].getList().length;i++){\r\n            var actAngle = Layers[0].getList()[i];\r\n            var signList = LayersDict[actAngle];\r\n            var result = 1;\r\n            for(var j = 0;j < signList.length;j++){\r\n                result = result * signList[j];\r\n            }\r\n            if(result == 1)result = true;\r\n            else result = false;\r\n            resultDict[actAngle] = result\r\n        }\r\n        var resultLayer = new Layer();\r\n        resultLayer.setDict(resultDict);\r\n        return resultLayer;\r\n    }\r\n    static getLayerResult(layer){\r\n        var result = [];\r\n        var angleList = layer.getList();\r\n        var angleDict = layer.getDict();\r\n        console.log(angleDict);\r\n        for(var i = 0;i < angleList.length;i++){\r\n            if(angleDict[angleList[i]]){\r\n                var j = 0;\r\n                console.log(\"index: \", i);\r\n                var startTerm = angleList[i];\r\n                startTerm = layer.getLatexAngle(startTerm);\r\n                i++;\r\n                while(angleDict[angleList[i]] && i<angleList.length){\r\n                    if(i == angleList.length-1 && angleDict[angleList[i]]){\r\n                        for(var j = 0;j < angleList.length;j++){\r\n                            if(!angleDict[angleList[j]])break;\r\n                        }\r\n                    }\r\n                    i++;\r\n                }\r\n                var endTerm = 0;\r\n                if(j == 0)endTerm = angleList[i];\r\n                else endTerm = angleList[j];\r\n                console.log(endTerm);\r\n                endTerm = layer.getLatexAngle(endTerm);\r\n                result.push((startTerm + \" < x < \" + endTerm));\r\n                j = 0;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static mergeLayers(Layers){\r\n        var resultLayer = new Layer();\r\n        var resultDict = resultLayer.getDict();\r\n        for(var i = 0;i < Layers.length;i++){\r\n            for(var j = 0;j < Layers[i].getList().length;j++){\r\n                if(Layers[i].getDict()[Layers[i].getList()[j]]){\r\n                    resultDict[Layers[i].getList()[j]] = true;\r\n                }\r\n            }\r\n        }\r\n        resultLayer.setDict(resultDict);\r\n        return resultLayer;\r\n    }\r\n    getList(){\r\n        return this.Angles;\r\n    }\r\n    getDict(){\r\n        return this.AnglesDict;\r\n    }\r\n    getAngleFromString(string){\r\n        return this.StringDict[string];\r\n    }\r\n    getStringFromAngle(angle){\r\n        for(var i = 0;i < this.StringAngles.length;i++){\r\n            if(this.StringDict[this.StringAngles[i]] == angle)return this.StringDict[this.StringAngles[i]];\r\n        }\r\n    }\r\n    setDict(newDict){\r\n        this.AnglesDict = newDict;\r\n    }\r\n    setTrueFor(a, b){\r\n        //console.log(a);\r\n        //console.log(b);\r\n        if(!this.Angles.includes(a) || !this.Angles.includes(b)){\r\n            console.log(\"errore, gli angoli non fanno parte del dataset, e il mio dataset è perfetto\");\r\n        }\r\n        else if(a>b){\r\n            console.log(\"errore, gli angoli devono essere in ordine crescente!\");\r\n        }\r\n        else{\r\n            for(var i = this.Angles.indexOf(a);i < this.Angles.indexOf(b);i++){\r\n                this.AnglesDict[this.Angles[i]] = true;\r\n            }\r\n        }\r\n    }\r\n    setTrueForExtern(a, b){\r\n        if(!this.Angles.includes(a) || !this.Angles.includes(b)){\r\n            console.log(\"errore, gli angoli non fanno parte del dataset, e il mio dataset è perfetto\");\r\n        }\r\n        else if(a>b){\r\n            console.log(\"errore, gli angoli devono essere in ordine crescente!\");\r\n        }\r\n        else{\r\n            var i = this.Angles.indexOf(b);\r\n            while(i != this.Angles.indexOf(a)){\r\n                if(i == this.Angles.length - 1)i = 0;\r\n                else{\r\n                    this.AnglesDict[this.Angles[i]] = true;\r\n                    i++;\r\n                }\r\n            }\r\n        } \r\n    }\r\n\r\n}\r\nexport default Layer;","\r\nimport Layer from \"./Layer\"\r\nclass Drawer{\r\n    static drawText(x, y, length, angle, text) {\r\n        var canvas = document.getElementById(\"myCanvas\");\r\n        var Xoffset = 0;\r\n        var Yoffset = 0;\r\n        if((Math.cos(angle)*length)>0)Xoffset+=15;\r\n        else Xoffset= -20\r\n        if((-(Math.sin(angle)*length))>0)Yoffset+=10;\r\n        else Yoffset= -10;\r\n        if(text == \"pi\")console.log(Xoffset);\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.font = \"15px Arial\";\r\n        console.log(\"raggio2: \", length);\r\n        ctx.fillText(text.replace(\"pi\", \"\\u03C0\"), x+(Math.cos(angle)*length)+Xoffset, y-(Math.sin(angle)*length)+Yoffset);\r\n    }\r\n    static drawArc(x, y, r, startAngle, endAngle){\r\n        var c = document.getElementById(\"myCanvas\");\r\n        var context = c.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.arc(x, y, r, startAngle, endAngle, true);\r\n        context.stroke();\r\n    }\r\n    static drawColoredArc(x, y, r, startAngle, endAngle, color){\r\n        var c = document.getElementById(\"myCanvas\");\r\n        var context = c.getContext(\"2d\");\r\n        context.beginPath();\r\n        context.arc(x, y, r, startAngle, endAngle, true);\r\n        context.lineWidth =6;\r\n        context.strokeStyle = color;\r\n        context.stroke();\r\n    }\r\n    static drawLayer(x, y, r, l){\r\n        console.log(\"raggio1: \", r);\r\n        var list = l.getList();\r\n        var dict = l.getDict();\r\n        for(var i = 0; i < (list.length-1); i++){\r\n            if(dict[list[i]] === true){\r\n                this.drawColoredArc(x, y, r, -list[i], -list[i+1], \"#FF0000\");\r\n                //console.log('drawing red arc between '+ (-list[i]) + ' and'  + (-list[i+1]));\r\n            }\r\n            else{\r\n                this.drawColoredArc(x, y, r, -list[i], -list[i+1], \"#0000FF\");\r\n                //console.log('drawing blue arc between '+ (-list[i]) + ' and'  + (-list[i+1]));\r\n            }\r\n        }\r\n    }\r\n    static drawResultLayer(x, y, r, l, importantAngles){\r\n        this.drawLayer(x, y, r, l);\r\n        for(var i = 0; i < importantAngles.length;i++){\r\n            console.log(\"sto disegnando: \", l.getAngleFromString(importantAngles[i]), importantAngles[i])\r\n            this.drawText(x, y, r,  importantAngles[i], l.getAngleFromString(importantAngles[i]));\r\n        }\r\n    }\r\n}\r\nexport default Drawer;","import React, {Component} from 'react'\r\nimport Drawer from '../utilities/Drawer'\r\nimport Layer from '../utilities/Layer'\r\nimport multiplyLayers from '../utilities/Layer';\r\nclass Canvas extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        var percentage = this.props.percent/100;\r\n        this.state = {\r\n            width: window.innerWidth*percentage,\r\n            height: window.innerHeight*percentage\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n        <div>\r\n            <canvas id=\"myCanvas\" width={this.state.width} height={this.state.height}></canvas>\r\n        </div>\r\n        );\r\n    }\r\n    multiplyLayers(Layers){\r\n        var resultDict = {};\r\n        var LayersDict = {};\r\n        for(var i = 0;i < Layers[0].getList().length;i++){\r\n            LayersDict[Layers[0].getList()[i]] = new Array();\r\n        }\r\n        for(var i = 0;i < Layers.length;i++){\r\n            for(var j = 0;j < Layers[i].getList().length;j++){\r\n                var actAngle = Layers[i].getList()[j];\r\n                var sign = Layers[i].getDict()[actAngle];\r\n                if(sign)sign = 1;\r\n                else sign = -1; \r\n                LayersDict[actAngle].push(sign);\r\n            }\r\n        }\r\n        for(var i = 0;i < Layers[0].getList().length;i++){\r\n            var actAngle = Layers[0].getList()[i];\r\n            var signList = LayersDict[actAngle];\r\n            var result = 1;\r\n            for(var j = 0;j < signList.length;j++){\r\n                result = result * signList[j];\r\n            }\r\n            if(result == 1)result = true;\r\n            else result = false;\r\n            resultDict[actAngle] = result\r\n        }\r\n        var resultLayer = new Layer();\r\n        resultLayer.setDict(resultDict);\r\n        return resultLayer;\r\n    }\r\n    getLayerResult(layer){\r\n        var result = [];\r\n        var angleList = layer.getList();\r\n        var angleDict = layer.getDict();\r\n        for(var i = 0;i < angleList.length;i++){\r\n            if(angleDict[angleList[i]]){\r\n                var startTerm = angleList[i];\r\n                startTerm = layer.getLatex(startTerm);\r\n                i++;\r\n                while(angleDict[angleList[i]] && i<angleList.length)i++;\r\n                var endTerm = angleList[i];\r\n                endTerm = layer.getLatex(endTerm);\r\n                result.push((startTerm + \" < x < \" + endTerm));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    componentDidMount(){\r\n        //Drawer.drawColoredArc(this.state.width/2, this.state.height/2, 100, 0, -Math.PI/2, 'blue');\r\n        //Drawer.drawColoredArc(this.state.width/2, this.state.height/2, 100, -Math.PI/2, 0, 'red');\r\n    }\r\n}\r\n\r\nexport default Canvas\r\n","import React, { Component } from 'react'\r\nimport \"./css/fraction.css\"\r\nexport class Fraction extends Component {\r\n    render() {\r\n        if(this.props.isFraction){\r\n            return (\r\n            <div className=\"fraction\">\r\n                <span className=\"top\">{this.props.top}</span>\r\n                <span className=\"bottom\">{this.props.bottom}</span>\r\n            </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <p>{this.props.noF}</p>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Fraction\r\n","import Layer from './Layer';\r\nclass Expression{\r\n    constructor(exp){\r\n        this.exp = exp;\r\n        this.isFirstType = true;\r\n        this.isSecondType = false;\r\n        this.isSystemIndex = this.exp.indexOf(\"+\");\r\n        this.exp = this.exp.replace(\"+\", \"\");\r\n    }\r\n    getType(exp){\r\n        var exp = this.exp;\r\n        var count = 0;\r\n        for(var i = 0;i < exp.length;i++){\r\n            if(exp[i] == \"<\")count++;\r\n        }\r\n        if(count == 2)return this.isFirstType;\r\n        else if(count == 1)return this.isSecondType;\r\n        else console.log(\"noccapito\"); //throw error\r\n\r\n    }\r\n    logTest(){\r\n        console.log(\"exp: \", this.exp);\r\n        console.log(\"left: \", this.getLeft(this.exp));\r\n        console.log(\"right: \", this.getRight(this.exp));\r\n    }\r\n    getLeft(){\r\n        var exp = this.exp;\r\n        if(this.getType(exp) == this.isFirstType){\r\n            exp = exp.replaceAll(\" \", \"\");\r\n            exp = exp.replaceAll(\"<\", \"\");\r\n            exp = exp.replace(\"x\", \" \");\r\n            return exp.substr(0, exp.indexOf(\" \"));\r\n        }\r\n        else{\r\n            exp = exp.replaceAll(\" \", \"\");\r\n            exp = exp.replaceAll(\"<\", \"\");\r\n            exp = exp.replaceAll(\">\", \"\");\r\n            exp = exp.replaceAll(\"x\", \"\");\r\n            exp = exp.replaceAll(\"and\", \" \");\r\n            return exp.substr(0, exp.indexOf(\" \"));\r\n        }\r\n        \r\n    }\r\n    getRight(){\r\n        var exp = this.exp;\r\n        if(this.getType(exp) == true){\r\n            exp = exp.replaceAll(\" \", \"\");\r\n            exp = exp.replaceAll(\"<\", \"\");\r\n            exp = exp.replace(\"x\", \" \");\r\n            return exp.substr(exp.indexOf(\" \")+1, exp.length-1);\r\n        }\r\n        else{\r\n            exp = exp.replaceAll(\" \", \"\");\r\n            exp = exp.replaceAll(\"<\", \"\");\r\n            exp = exp.replaceAll(\">\", \"\");\r\n            exp = exp.replaceAll(\"x\", \"\");\r\n            exp = exp.replaceAll(\"and\", \" \");\r\n            return exp.substr(exp.indexOf(\" \")+1, exp.length-1);\r\n        }\r\n    }\r\n    getLayer(){\r\n        var layer = new Layer();\r\n        if(this.getType() == this.isFirstType){\r\n            layer.setTrueFor(\r\n                layer.getAngleFromString(this.getLeft()),\r\n                layer.getAngleFromString(this.getRight()),\r\n            );\r\n        }\r\n        else{\r\n            this.logTest();\r\n            layer.setTrueForExtern(\r\n                layer.getAngleFromString(this.getLeft()),\r\n                layer.getAngleFromString(this.getRight()),\r\n            );\r\n        }\r\n        return layer;\r\n    }\r\n    isSystem(){\r\n        var exp = this.exp;\r\n        if(this.isSystemIndex != -1){\r\n            console.log(\"sgamato!\");\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    getClassforComp(){\r\n        if(this.isSystem())return \"box_wrapper2\";\r\n        else return \"box_wrapper\";\r\n    }\r\n\r\n}\r\nexport default Expression;","class Fractions{\r\n    static isFraction(fraction){\r\n        if(fraction.indexOf(\"/\") == -1){\r\n            return false;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    }\r\n    static getTop(fraction){\r\n        var start = 0;\r\n        var end = fraction.indexOf(\"/\");\r\n        return fraction.substring(start, end).replace(\"pi\", \"\\u03C0\");\r\n    }\r\n    static getBottom(fraction){\r\n        var start = fraction.indexOf(\"/\")+1;\r\n        var end = fraction.length;\r\n        return fraction.substring(start, end).replace(\"pi\", \"\\u03C0\");\r\n    }\r\n}\r\nexport default Fractions;","import React, { Component } from 'react'\r\nimport './css/expression_box.css'\r\nimport Fraction from \"./Fraction\"\r\nimport Layer from \"../utilities/Layer\";\r\nimport Drawer from \"../utilities/Drawer\"\r\nimport Expression from \"../utilities/Expressions\"\r\nimport Fractions from \"../utilities/Fractions\"\r\nvar Cookies = require(\"js-cookie\")\r\n\r\n\r\nexport class ExpressionBox extends Component {\r\n    //&#960;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leftTop : \"\",\r\n            leftBottom : \"\",\r\n            rightTop : \"\",\r\n            rightBottom : \"\",\r\n            active: false,\r\n            type : true,\r\n        }\r\n        this.handlePress = this.handlePress.bind(this);\r\n    }\r\n    submitExp(exp) {\r\n        var noLayer = true;\r\n        var l1 = exp.getLayer();\r\n        var left = exp.getLeft();\r\n        var right = exp.getRight();\r\n        var expClass = exp.getClassforComp();\r\n        var postExp = [];\r\n        if(exp.isSystem())postExp = [...this.props.preExp, exp];  \r\n        var canvas = document.getElementById('myCanvas');\r\n        var width = canvas.width;\r\n        var height = canvas.height;\r\n        if(this.props.preExp.length == 0 && !exp.isSystem()){\r\n            noLayer = false;\r\n            Drawer.drawLayer(width/2, height/2, this.props.range, l1);\r\n        }\r\n        else if(this.props.preExp.length != 0 && !exp.isSystem()){\r\n            noLayer = false;\r\n            var exps = [...this.props.preExp, exp];\r\n            var layers = [];\r\n            for(var i = 0;i < exps.length;i++){\r\n                layers.push(exps[i].getLayer());\r\n            }\r\n            l1 = Layer.mergeLayers(layers);\r\n            Drawer.drawLayer(width/2, height/2, this.props.range, l1);\r\n        }\r\n        this.props.updateHandler(\r\n            l1,\r\n            left, \r\n            right,\r\n            expClass,\r\n            postExp,\r\n            noLayer\r\n        );\r\n    }\r\n    handlePress(e){\r\n        if(e.key == \"Enter\"){\r\n            console.log(\"hai cliccato enter!\");\r\n            var expText = document.getElementById(\"inputFormula\").value;\r\n            var exp = new Expression(expText);\r\n            var left = exp.getLeft(exp);\r\n            var right = exp.getRight(exp);\r\n            this.submitExp(exp);\r\n            this.setState({\r\n                noFright: right.replace(\"pi\", \"\\u03C0\"),\r\n                noFleft: left.replace(\"pi\", \"\\u03C0\"),\r\n                isFractionLeft : Fractions.isFraction(left),\r\n                isFractionRight : Fractions.isFraction(right),\r\n                leftTop : Fractions.getTop(left),\r\n                rightTop : Fractions.getTop(right),\r\n                leftBottom :Fractions.getBottom(left),\r\n                rightBottom : Fractions.getBottom(right),\r\n                active: true,\r\n                type : exp.getType(),\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        if(!this.state.active){\r\n            return (\r\n            <div className={this.props.classId}>\r\n                <input type=\"text\" className=\"input_box\" id=\"inputFormula\" onKeyDown={this.handlePress}></input>\r\n                \r\n            </div>\r\n            )\r\n        }  \r\n        else{\r\n            if(this.state.type == true){\r\n                return(\r\n                    <div className={this.props.classId}>\r\n                        <Fraction \r\n                        top={this.state.leftTop} \r\n                        bottom={this.state.leftBottom} \r\n                        isFraction={this.state.isFractionLeft}\r\n                        noF={this.state.noFleft}\r\n                        />\r\n                        &#60; x &#60;\r\n                        <Fraction \r\n                        top={this.state.rightTop} \r\n                        bottom={this.state.rightBottom} \r\n                        isFraction={this.state.isFractionRight}\r\n                        noF={this.state.noFright}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={this.props.classId}>\r\n                        x &#60; \r\n                        <Fraction \r\n                        top={this.state.leftTop} \r\n                        bottom={this.state.leftBottom} \r\n                        isFraction={this.state.isFractionLeft}\r\n                        noF={this.state.noFleft}\r\n                        />\r\n                        &nbsp; &#8744;  x  &#62; &nbsp;\r\n                        <Fraction \r\n                        top={this.state.rightTop} \r\n                        bottom={this.state.rightBottom} \r\n                        isFraction={this.state.isFractionRight}\r\n                        noF={this.state.noFright}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ExpressionBox;","import React, { Component } from 'react'\r\nimport \"./css/container.css\"\r\nexport class LeftContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"left__container\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftContainer\r\n","import React, { Component } from 'react'\r\nimport \"./css/container.css\"\r\nimport ExpressionBox from \"./ExpressionBox\";\r\nimport Drawer from \"../utilities/Drawer\"\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport Layer from \"../utilities/Layer\"\r\nimport Fraction from \"./Fraction\"\r\nexport class RightContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.layers = [];\r\n        this.state = {\r\n            range : 75,\r\n            componentList : [\r\n                <ExpressionBox preExp = {[]} classId = {\"box_wrapper\"} range = {75} updateHandler={this.updateHandler.bind(this)}/>\r\n            ],\r\n            importantAngles: [],\r\n        }\r\n        this.updateHandler = this.updateHandler.bind(this);\r\n    }\r\n    updateHandler(layer, left, right, clazzId, postExp, noLayer){\r\n\r\n        this.setState({\r\n            range : this.state.range+25,\r\n            componentList : [...this.state.componentList, <ExpressionBox preExp = {postExp} classId = {clazzId} range = {this.state.range+50} updateHandler={this.updateHandler.bind(this)}/>],\r\n            importantAngles : [...this.state.importantAngles, left, right]\r\n        });\r\n        if(!noLayer)this.layers.push(layer);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"right__container\">\r\n                {this.state.componentList}\r\n                <button className=\"confirm__button\" onClick={\r\n                    () => {\r\n                        var l = Layer.multiplyLayers(this.layers);\r\n                        console.log(\"important angles: \", this.state.importantAngles);\r\n                        var canvas = document.getElementById('myCanvas');\r\n                        var width = canvas.width;\r\n                        var height = canvas.height;\r\n                        Drawer.drawLayer(width/2, height/2, this.state.range+100, l);\r\n                        for(var i = 0;i < this.state.importantAngles.length;i++){\r\n                            Drawer.drawText(width/2, height/2, this.state.range+100, l.getAngleFromString(this.state.importantAngles[i]), this.state.importantAngles[i]);\r\n                        }\r\n\r\n                    }\r\n                }>Calcola</button>\r\n                <button className=\"confirm__button2\" onClick={\r\n                    () => {\r\n                        window.location.reload();\r\n                    }\r\n                }>Pulisci</button>\r\n                <button className=\"confirm__button2\" onClick={\r\n                    () => {\r\n                        var c=document.getElementById(\"myCanvas\");\r\n                        var d=c.toDataURL(\"image/png\");\r\n                        var w=window.open('about:blank','image from canvas');\r\n                        w.document.write(\"<img src='\"+d+\"' alt='from canvas'/>\");\r\n                    }\r\n                }>Salva</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RightContainer\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Canvas from './Components/Canvas'\r\nimport Fraction from './Components/Fraction'\r\nimport ExpressionBox from './Components/ExpressionBox'\r\nimport LeftContainer from './Components/LeftContainer'\r\nimport RightContainer from './Components/RightContainer'\r\nimport \"./Components/css/container.css\"\r\n//test\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      components: <div id=\"textResult\">TEST</div>\r\n    }\r\n    this.writeResult = this.writeResult.bind(this);\r\n  }\r\n  writeResult(F1, F2){\r\n\r\n    this.setState({\r\n      components: (\r\n        <div>\r\n          <Fraction \r\n          top={F1[0]} \r\n          bottom={F1[1]} \r\n          isFraction={F1[2]}\r\n          noF={F1[3].replace(\"pi\", \"\\u03C0\")}\r\n          />\r\n          &#60; x &#60;\r\n          <Fraction \r\n          top={F2[0]} \r\n          bottom={F2[1]} \r\n          isFraction={F2[2]}\r\n          noF={F2[3].replace(\"pi\", \"\\u03C0\")}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n  componentDidMount(){\r\n    document.title = \"Angle\";\r\n  }\r\n  render(){\r\n    var pippo = \"pippo\";\r\n    return (\r\n      <div className=\"container\">\r\n        <LeftContainer>\r\n          <Canvas percent={70}/>\r\n        </LeftContainer>      \r\n        <RightContainer resultHandler = {this.writeResult.bind(this)}>\r\n        </RightContainer>\r\n      </div>);\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}