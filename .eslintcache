[{"E:\\Javascript\\angle\\src\\Components\\ExpressionBox.js":"1","E:\\Javascript\\angle\\src\\Components\\RightContainer.js":"2","E:\\Javascript\\angle\\src\\Components\\Modal.js":"3","E:\\Javascript\\angle\\src\\App.js":"4","E:\\Javascript\\angle\\src\\utilities\\Expressions.js":"5"},{"size":6546,"mtime":1611562170274,"results":"6","hashOfConfig":"7"},{"size":3257,"mtime":1611564445074,"results":"8","hashOfConfig":"7"},{"size":932,"mtime":1611564405881,"results":"9","hashOfConfig":"7"},{"size":1442,"mtime":1611564372858,"results":"10","hashOfConfig":"7"},{"size":2911,"mtime":1610467158825,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1wtl0f3",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Javascript\\angle\\src\\Components\\ExpressionBox.js",["24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42"],"import React, { Component } from 'react'\r\nimport './css/expression_box.css'\r\nimport Fraction from \"./Fraction\"\r\nimport Layer from \"../utilities/Layer\";\r\nimport Drawer from \"../utilities/Drawer\"\r\nimport Expression from \"../utilities/Expressions\"\r\nimport Fractions from \"../utilities/Fractions\"\r\nimport Trig from \"../utilities/Trig\"\r\n\r\n\r\nexport class ExpressionBox extends Component {\r\n    //&#960;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            leftTop : \"\",\r\n            leftBottom : \"\",\r\n            rightTop : \"\",\r\n            rightBottom : \"\",\r\n            active: false,\r\n            type : true,\r\n        }\r\n        this.handlePress = this.handlePress.bind(this);\r\n    }\r\n    submitExp(exp) {\r\n        var noLayer = true;\r\n        var l1 = exp.getLayer();\r\n        var left = exp.getLeft();\r\n        var right = exp.getRight();\r\n        var expClass = exp.getClassforComp();\r\n        var postExp = [];\r\n        if(exp.isSystem())postExp = [...this.props.preExp, exp];  \r\n        var canvas = document.getElementById('myCanvas');\r\n        var width = canvas.width;\r\n        var height = canvas.height;\r\n        if(this.props.preExp.length == 0 && !exp.isSystem()){\r\n            noLayer = false;\r\n            Drawer.drawLayer(width/2, height/2, this.props.range, l1);\r\n        }\r\n        else if(this.props.preExp.length != 0 && !exp.isSystem()){\r\n            noLayer = false;\r\n            var exps = [...this.props.preExp, exp];\r\n            var layers = [];\r\n            for(var i = 0;i < exps.length;i++){\r\n                layers.push(exps[i].getLayer());\r\n            }\r\n            l1 = Layer.mergeLayers(layers);\r\n            Drawer.drawLayer(width/2, height/2, this.props.range, l1);\r\n        }\r\n        this.props.updateHandler(\r\n            l1,\r\n            left, \r\n            right,\r\n            expClass,\r\n            postExp,\r\n            noLayer\r\n        );\r\n    }\r\n    handlePress(e){\r\n        if(e.key == \"Enter\"){\r\n            console.log(\"hai cliccato enter!\");\r\n            var expText = document.getElementById(\"inputFormula\").value;\r\n            if(expText.indexOf(\"cos\") != -1 \r\n            || expText.indexOf(\"sin\") != -1\r\n            || expText.indexOf(\"tan\") != -1\r\n            || expText.indexOf(\"cotan\") != -1){\r\n                var trigFun = \"\";\r\n                var sign = \"\"\r\n                if(expText.indexOf(\"cos\") != -1 )trigFun = \"cos\";\r\n                else if(expText.indexOf(\"sin\") != -1 )trigFun = \"sin\";\r\n                else if(expText.indexOf(\"tan\") != -1 )trigFun = \"tan\";\r\n                else if(expText.indexOf(\"cotan\") != -1 )trigFun = \"cotan\";\r\n                var sign = \"\";\r\n                if(expText.indexOf(\">\") != -1 )sign = \">\";\r\n                else if(expText.indexOf(\">=\") != -1 )sign = \">=\";\r\n                else if(expText.indexOf(\"<\") != -1 )sign = \"<\";\r\n                else if(expText.indexOf(\"<=\") != -1 )sign = \"<=\";\r\n                var number = expText.replace(sign, \"\").replace(\"(x)\", \"\").replace(\" \", \"\").replace(trigFun, \"\");\r\n                sign = sign.replace(\"=\", \"\");\r\n                var canvas = document.getElementById('myCanvas');\r\n                var width = canvas.width;\r\n                var height = canvas.height;\r\n                if(trigFun != \"tan\" && trigFun != \"cotan\")Drawer.drawInequity(width/2, height/2, 200, Trig.getLayer(trigFun, sign, number));\r\n                else{\r\n                    document.getElementById(\"robbetto\").innnerHTML = \"Ancora tangente e cotangente non sono supportate :(\";\r\n                    var modal = document.getElementById(\"myModal\");\r\n                    modal.style.display = \"block\";\r\n                }\r\n            }\r\n            else{\r\n                var exp = new Expression(expText);\r\n                var left = exp.getLeft(exp);\r\n                var right = exp.getRight(exp);\r\n                this.submitExp(exp);\r\n                this.setState({\r\n                    noFright: right.replace(\"pi\", \"\\u03C0\"),\r\n                    noFleft: left.replace(\"pi\", \"\\u03C0\"),\r\n                    isFractionLeft : Fractions.isFraction(left),\r\n                    isFractionRight : Fractions.isFraction(right),\r\n                    leftTop : Fractions.getTop(left),\r\n                    rightTop : Fractions.getTop(right),\r\n                    leftBottom :Fractions.getBottom(left),\r\n                    rightBottom : Fractions.getBottom(right),\r\n                    active: true,\r\n                    type : exp.getType(),\r\n                });\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        if(!this.state.active){\r\n            return (\r\n            <div className={this.props.classId}>\r\n                <input type=\"text\" className=\"input_box\" id=\"inputFormula\" onKeyDown={this.handlePress}></input>\r\n                \r\n            </div>\r\n            )\r\n        }  \r\n        else{\r\n            if(this.state.type == true){\r\n                return(\r\n                    <div className={this.props.classId}>\r\n                        <Fraction \r\n                        top={this.state.leftTop} \r\n                        bottom={this.state.leftBottom} \r\n                        isFraction={this.state.isFractionLeft}\r\n                        noF={this.state.noFleft}\r\n                        />\r\n                        &#60; x &#60;\r\n                        <Fraction \r\n                        top={this.state.rightTop} \r\n                        bottom={this.state.rightBottom} \r\n                        isFraction={this.state.isFractionRight}\r\n                        noF={this.state.noFright}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div className={this.props.classId}>\r\n                        x &#60; \r\n                        <Fraction \r\n                        top={this.state.leftTop} \r\n                        bottom={this.state.leftBottom} \r\n                        isFraction={this.state.isFractionLeft}\r\n                        noF={this.state.noFleft}\r\n                        />\r\n                        &nbsp; &#8744;  x  &#62; &nbsp;\r\n                        <Fraction \r\n                        top={this.state.rightTop} \r\n                        bottom={this.state.rightBottom} \r\n                        isFraction={this.state.isFractionRight}\r\n                        noF={this.state.noFright}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default ExpressionBox;",["43","44"],"E:\\Javascript\\angle\\src\\Components\\RightContainer.js",["45","46","47"],"E:\\Javascript\\angle\\src\\Components\\Modal.js",["48"],"E:\\Javascript\\angle\\src\\App.js",["49"],"E:\\Javascript\\angle\\src\\utilities\\Expressions.js",["50","51","52","53","54","55","56","57","58"],{"ruleId":"59","severity":1,"message":"60","line":36,"column":37,"nodeType":"61","messageId":"62","endLine":36,"endColumn":39},{"ruleId":"59","severity":1,"message":"63","line":40,"column":42,"nodeType":"61","messageId":"62","endLine":40,"endColumn":44},{"ruleId":"59","severity":1,"message":"60","line":60,"column":18,"nodeType":"61","messageId":"62","endLine":60,"endColumn":20},{"ruleId":"59","severity":1,"message":"63","line":63,"column":39,"nodeType":"61","messageId":"62","endLine":63,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":64,"column":39,"nodeType":"61","messageId":"62","endLine":64,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":65,"column":39,"nodeType":"61","messageId":"62","endLine":65,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":66,"column":41,"nodeType":"61","messageId":"62","endLine":66,"endColumn":43},{"ruleId":"59","severity":1,"message":"63","line":69,"column":43,"nodeType":"61","messageId":"62","endLine":69,"endColumn":45},{"ruleId":"59","severity":1,"message":"63","line":70,"column":48,"nodeType":"61","messageId":"62","endLine":70,"endColumn":50},{"ruleId":"59","severity":1,"message":"63","line":71,"column":48,"nodeType":"61","messageId":"62","endLine":71,"endColumn":50},{"ruleId":"59","severity":1,"message":"63","line":72,"column":50,"nodeType":"61","messageId":"62","endLine":72,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":73,"column":21,"nodeType":"66","messageId":"67","endLine":73,"endColumn":25},{"ruleId":"59","severity":1,"message":"63","line":74,"column":41,"nodeType":"61","messageId":"62","endLine":74,"endColumn":43},{"ruleId":"59","severity":1,"message":"63","line":75,"column":47,"nodeType":"61","messageId":"62","endLine":75,"endColumn":49},{"ruleId":"59","severity":1,"message":"63","line":76,"column":46,"nodeType":"61","messageId":"62","endLine":76,"endColumn":48},{"ruleId":"59","severity":1,"message":"63","line":77,"column":47,"nodeType":"61","messageId":"62","endLine":77,"endColumn":49},{"ruleId":"59","severity":1,"message":"63","line":83,"column":28,"nodeType":"61","messageId":"62","endLine":83,"endColumn":30},{"ruleId":"59","severity":1,"message":"63","line":83,"column":48,"nodeType":"61","messageId":"62","endLine":83,"endColumn":50},{"ruleId":"59","severity":1,"message":"60","line":120,"column":32,"nodeType":"61","messageId":"62","endLine":120,"endColumn":34},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":5,"column":8,"nodeType":"66","messageId":"74","endLine":5,"endColumn":22},{"ruleId":"72","severity":1,"message":"75","line":7,"column":8,"nodeType":"66","messageId":"74","endLine":7,"endColumn":12},{"ruleId":"59","severity":1,"message":"63","line":37,"column":47,"nodeType":"61","messageId":"62","endLine":37,"endColumn":49},{"ruleId":"59","severity":1,"message":"60","line":23,"column":30,"nodeType":"61","messageId":"62","endLine":23,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":44,"column":9,"nodeType":"66","messageId":"74","endLine":44,"endColumn":14},{"ruleId":"64","severity":1,"message":"77","line":11,"column":13,"nodeType":"66","messageId":"67","endLine":11,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":14,"column":23,"nodeType":"61","messageId":"62","endLine":14,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":16,"column":18,"nodeType":"61","messageId":"62","endLine":16,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":17,"column":23,"nodeType":"61","messageId":"62","endLine":17,"endColumn":25},{"ruleId":"59","severity":1,"message":"60","line":28,"column":30,"nodeType":"61","messageId":"62","endLine":28,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":46,"column":30,"nodeType":"61","messageId":"62","endLine":46,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":63,"column":27,"nodeType":"61","messageId":"62","endLine":63,"endColumn":29},{"ruleId":"72","severity":1,"message":"78","line":79,"column":13,"nodeType":"66","messageId":"74","endLine":79,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":80,"column":31,"nodeType":"61","messageId":"62","endLine":80,"endColumn":33},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-redeclare","'sign' is already defined.","Identifier","redeclared","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'ReactDOMServer' is defined but never used.","unusedVar","'Trig' is defined but never used.","'pippo' is assigned a value but never used.","'exp' is already defined.","'exp' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]